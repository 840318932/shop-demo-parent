management:
  security:
    enabled: false
security:
  basic:
    enabled: false # Enable basic authentication.
  user:
    name: user
    password: password
spring:
  application:
    name: shop-demo-info
  http:
    multipart:
      max-file-size: 1Mb      # Max file size，单文件上传允许的最大值，默认1M
      max-request-size: 10Mb   # Max request size，多文件上传允许的最大值，默认10M
  redis: # REDIS (RedisProperties)
    #database=0 # Redis数据库索引（默认为0）
    host: 119.23.224.103 # Redis服务器地址
    port: 6379 # Redis服务器连接端口
    password: 123456abc # Redis服务器连接密码（默认为空）
    #pool:
    #  max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
    #  max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
    #  max-idle: 8 # 连接池中的最大空闲连接
    #  min-idle: 0 # 连接池中的最小空闲连接
    #timeout: 0 # 连接超时时间（毫秒）
  rabbitmq:
    host: 119.23.251.186
    port: 5672
    username: guest
    password: guest
  sleuth:
      sampler:
        percentage: 1.0 #指定需要采样的百分比，默认值是0.1，即10%，这是因为在分布式系统中，数据量可能会非常大，因此样本大小非常重要。
  datasource:
    master: # master库
      url: 'jdbc:mysql://119.23.224.103:3306/springcloud_shop_demo_user?useLegacyDatetimeCode=false&serverTimezone=Asia/Hong_Kong&useSSL=false&useUnicode=true&characterEncoding=utf-8'
      username: root
      password: root
      port: 3306
      driver-class-name: com.mysql.jdbc.Driver
    cluster: # cluster库
      url: 'jdbc:mysql://119.23.224.103:3306/springcloud_shop_demo_account?useLegacyDatetimeCode=false&serverTimezone=Asia/Hong_Kong&useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true'
      username: root
      password: root
      port: 3306
      driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      max-active: 20
      min-idle: 5
      max-wait: 60000
      pool-prepared-statements: false
      validation-query: SELECT 1
      validation-query-timeout: 30000
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
#mybatis
#entity扫描的包名
mybatis:
  mapper-locations: 'classpath*:mapper/**/*Mapper.xml' # Mapper.xml所在的位置
  type-aliases-package: 'org.shop.demo.info.entity.**'  # entity扫描的包名
  #type-handlers-package: 'com.github.prontera.domain.type.handler' # 扫描typeHandlers的包
  #config-location: mybatis-config.xml # 配置文件的路径
  #check-config-location: # 检查配置文件是否存在
  #executor-type: # 设置执行模式（SIMPLE, REUSE, BATCH），默认为SIMPLE
#这个插件是mybatis的分页查询
pagehelper:
   helperDialect: mysql # 分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect属性来指定分页插件使用哪种方言 配置时，可以使用下面的缩写值：oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby
   reasonable: true # 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
   supportMethodsArguments: true # 支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
server:
  port: 8040
#eureka:
#  client:
#    healthcheck:
#      enabled: true
#    serviceUrl:
#      defaultZone: http://user:password@localhost:8760/eureka
#  instance:
#    prefer-ip-address: true
#    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}} 
feign:
  hystrix:
    enabled: true #在Dalston的版本之前，feign默认开启hystrix支持，之后需要手动开启
